setwd("/Users/logancorrea/Documents/GitHub/Prob-and-Stats-for-Biomed/R Sessions/M04 - Bayesian Networks")
##This dataset evaluate predictor that are believe to influence student scores
Student_scores = read.csv("Student_scores.csv")
head(Studen_scores)
head(Student_scores)
detach("package:bnstruct", unload=TRUE)
library(bnlearn)
detach("package:bnstruct", unload=TRUE)
library(bnstruct)
detach("package:bnstruct", unload=TRUE)
library(bnlearn)
data(asia)
class(asia)
head(asia)
###let's see some stats
apply(asia, 2, table)/5000
data(asia)
table(asia$A)
###let's see some stats
apply(asia, 2, table)/5000
##################-----This will convert the factors to integers
Asia_Num = asia %>% mutate_if(is.factor,as.integer)
library(dplyr)
##################-----This will convert the factors to integers
Asia_Num = asia %>% mutate_if(is.factor,as.integer)
#
detach("package:bnlearn", unload=TRUE)
library(bnstruct)
rep(T, ncol(Asia_Num)
c(replicate(ncol(Asia_Num),2)))
c(replicate(ncol(Asia_Num),2))
data2015_bnstruct <- BNDataset(data = Asia_Num,
discreteness = rep(T, ncol(Asia_Num)),
variables = colnames(Asia_Num),
starts.from = 1,
node.sizes = c(replicate(ncol(Asia_Num),2)))
##################-----Learn the structure of the object using the exact algorithm
Exactnet_bnstruct <- learn.network(data2015_bnstruct,algo = "sm", scoring.func = "BIC")
plot(Exactnet_bnstruct)
library(Rgraphviz)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Rgraphviz")
library(Rgraphviz)
plot(Exactnet_bnstruct)
##################-----Save the adjacent matrix and use it in bnlearn to fit the data to best structure
netdata2015_bnstruct_dag = Exactnet_bnstruct@dag
##################-----Create an empty graph with the variables from the dataset
detach("package:bnstruct", unload=TRUE)
library(bnlearn)
data2015_ALA_BN_fact.net2 = empty.graph(names(Asia_Num))
data2015_ALA_BN_fact.net2
##################-----Get the adjacent matrix from bnstruct
amat(data2015_ALA_BN_fact.net2) <- netdata2015_bnstruct_dag
data2015_ALA_BN_fact.net2
##################-----Fit the data to the structure
net_fit <- bn.fit(data2015_ALA_BN_fact.net2, asia, method = "bayes")
##################----------------######################
##################----------------######################
g_exact <- igraph.from.graphNEL(as.graphNEL(net_fit))
net_fit
plot(g_exact)
net_fit_junction_asia = compile(as.grain(net_fit), propagate = T)
library(grain)
library(Grain)
library(gRain)
install.packages("gRain")
library(gRain)
net_fit_junction_asia = compile(as.grain(net_fit), propagate = T)
net_fit_junction_asia$universe
querygrain(setEvidence(net_fit_junction_asia, nodes = "D",
querygrain(setEvidence(net_fit_junction_asia, nodes = "D",
states = "yes",
propagate = T),
nodes = "T")
querygrain(setEvidence(net_fit_junction_asia, nodes = c("D","T"),
net_bnlearn
net_bnlearn = boot.strength(data = asia, R = 500, algorithm = "hc",
algorithm.args = list(score = "bde",iss=10))
net_bnlearn
##Query
net_bnlearn[net_bnlearn$strength>0.85 & (net_bnlearn$direction>=0.5),]
##What is the best threshold of strength to segment the network?
averaged.network(net_bnlearn)
##Construct and averaged network
avg.boot = averaged.network(net_bnlearn, threshold = 0.50)
plot(avg.boot)
##Construct and averaged network
avg.boot = averaged.network(net_bnlearn, threshold = 0.50)
##What is the best threshold of strength to segment the network?
averaged.network(net_bnlearn)
##Attach probability tables to the structure we just learned
fitted = bn.fit(avg.boot, asia, method = "bayes")
library(graph)
library(igraph)
g <- igraph.from.graphNEL(as.graphNEL(fitted))
plot(g)
g
