B_Samples$race <- as.factor(B_Samples$race)
nlevels(B_Samples$race)
# smoke - binary
B_Samples$smoke <- as.factor(B_Samples$smoke)
nlevels(B_Samples$smoke)
# plt - ordinal
B_Samples$race <- as.factor(B_Samples$race)
nlevels(B_Samples$plt)
# ht - binary
B_Samples$plt <- as.factor(B_Samples$plt)
B_Samples$plt <- as.factor(B_Samples$plt)
B_Samples$smoke <- as.factor(B_Samples$smoke)
nlevels(B_Samples$smoke)
B_Samples$plt <- as.factor(B_Samples$plt)
# ptl - ordinal
B_Samples$ptl <- as.factor(B_Samples$ptl)
nlevels(B_Samples$ptl)
B_Samples$low <- as.factor(B_Samples$low)
nlevels(B_Samples$low)
# race - nominal
B_Samples$race <- as.factor(B_Samples$race)
nlevels(B_Samples$race)
# smoke - binary
B_Samples$smoke <- as.factor(B_Samples$smoke)
nlevels(B_Samples$smoke)
# ptl - ordinal
B_Samples$ptl <- as.factor(B_Samples$ptl)
nlevels(B_Samples$ptl)
# ht - binary
B_Samples$ht <- as.factor(B_Samples$ht)
nlevels(B_Samples$ht)
# ui - binary
B_Samples$ui <- as.factor(B_Samples$ui)
nlevels(B_Samples$ui)
# ftv - ordinal
B_Samples$ftv <- as.factor(B_Samples$ftv)
nlevels(B_Samples$ftv)
summary_age <- B_Samples$age %>%
summarize(mean = mean(age, na.rm = TRUE), variance = var(age, na.rm = TRUE))
summary_age <- B_Samples$age
summarize(mean = mean(age, na.rm = TRUE), variance = var(age, na.rm = TRUE))
summary_age <-
summarize(mean = mean(B_Samples$age, na.rm = TRUE), variance = var(B_Samples$age, na.rm = TRUE))
summary_age <- B_Samples %>%
summarize(mean = mean(age, na.rm = TRUE),
variance = var(age, na.rm = TRUE))
library(dplyr)
summary_age <- B_Samples %>%
summarize(mean = mean(age, na.rm = TRUE),
variance = var(age, na.rm = TRUE))
summary_age <- B_Samples %>%
summarize(mean = mean(age, na.rm = TRUE),
variance = var(age, na.rm = TRUE))
View(summary_age)
View(summary_age)
summary_age <- B_Samples %>%
summarize(mean = mean(age, na.rm = TRUE),
standard_deviation = sd(age, na.rm = True),
Median = median(age, na.rm = TRUE))
summary_age <- B_Samples %>%
summarize(mean = mean(age, na.rm = TRUE),
standard_deviation = sd(age, na.rm = TRUE),
Median = median(age, na.rm = TRUE))
View(summary_age)
# Problem Set 2
library(dplyr)
library(knitr)
summary_age <- B_Samples %>%
summarize(mean = mean(age, na.rm = TRUE),
standard_deviation = sd(age, na.rm = TRUE),
Median = median(age, na.rm = TRUE))
kable(summary_age)
datatable(summary_age)
library(DT)
datatable(summary_age)
datatable(summary_age)
library(DT)
# Continuous Variable:
# age
mean(B_samples$age)
# Continuous Variable:
# age
mean(B_Samples$age)
nlevels(B_Samples$smoke)
median(B_Samples$age)
mean(B_Samples$age)
sd(B_Samples$age)
median(B_Samples$age)
# lwt
mean(B_Samples$lwt)
sd(B_Samples$lwt)
median(B_Samples$lwt)
# bwt
mean(B_Samples$bwt)
sd(B_Samples$bwt)
median(B_Samples$bwt)
View(B_Samples)
# 1-C How many individuals older than 30 smoke?
B_Samples %>% filter(smoke == 1, age > 30) %>% tally()
# 1-D Plot a histogram for birth weight.
ggplot(data = B_Samples$bwt)
# 1-D Plot a histogram for birth weight.
hist(data = B_Samples$bwt)
# 1-D Plot a histogram for birth weight.
hist(B_Samples$bwt)
hist(B_Samples$bwt,
main = "Birth Weight",
xlab = "Weight in Grams",
)
total_individuals <- nrow(B_Samples)
# Number of individuals with low birth weight
low_sum <- sum(B_Samples$low == 1)
# Number of individuals with a mother who smoked
smoke_sum <- sum(B_Samples$smoke == 1)
# Number of individuals with either low birth weight or a smoking mother
low_smoke_sum <- sum(low_sum | smoke_sum )
probability <- low_smoke_sum / total_individuals
# Calculate the probability
low_smoke_sum / total_individuals
# Calculate the probability
sum(low_sum | smoke_sum ) / total_individuals
low_sum <- sum(B_Samples$low == 1)/total_individuals
# Number of individuals with a mother who smoked
smoke_sum <- sum(B_Samples$smoke == 1)/total_individuals
# Calculate the probability p(A or B)
sum(low_sum | smoke_sum )
total_individuals <- nrow(B_Samples)
# Number of individuals with low birth weight
low_prob <- sum(B_Samples$low == 1)/total_individuals
# Number of individuals with a mother who smoked
smoke_prob <- sum(B_Samples$smoke == 1)/total_individuals
# Calculate the probability p(A or B) = p(A)+p(B)
sum(low_prob | smoke_prob )
# Calculate the probability p(A or B) = p(A)+p(B)
low_prob + smoke_prob
low_smoke_prob <- sum(B_Samples$low == 1 | B_Samples$smoke == 1)/total_individuals
# Calculate the probability P(A ⋃ B) = P(A) + P(B) - P(A and B)
low_prob + smoke_prob - low_smoke_prob
# Problem Set 2
setwd("C:/Users/logan/Documents/GitHub/Prob-and-Stats-for-Biomed/Homework/HW02/")
# Load dataset
B_Samples = read.table("birthwt.txt", sep = "", header = T)
head(B_Samples)
# 1-A How many observations are in the dataset?
nrow(B_Samples)
# 1-B Examine the features, determine what type of variable each represents,
# and indicate whether each one is discrete or continuous. Then, go on to determine
# the distribution or descriptive statistics as appropriate
# For Discrete Variables:
# Indicate whether the feature is nominal, ordinal, or binary
# How many levels each variable has
# Discrete Variables:
# low - binary
B_Samples$low <- as.factor(B_Samples$low)
nlevels(B_Samples$low)
# race - nominal
B_Samples$race <- as.factor(B_Samples$race)
nlevels(B_Samples$race)
# smoke - binary
B_Samples$smoke <- as.factor(B_Samples$smoke)
nlevels(B_Samples$smoke)
# ptl - ordinal
B_Samples$ptl <- as.factor(B_Samples$ptl)
nlevels(B_Samples$ptl)
# ht - binary
B_Samples$ht <- as.factor(B_Samples$ht)
nlevels(B_Samples$ht)
# ui - binary
B_Samples$ui <- as.factor(B_Samples$ui)
nlevels(B_Samples$ui)
# ftv - ordinal
B_Samples$ftv <- as.factor(B_Samples$ftv)
nlevels(B_Samples$ftv)
# For Continuous variables:
# Determine the mean, standard deviation, and median
# Continuous Variable:
# age
mean(B_Samples$age)
sd(B_Samples$age)
median(B_Samples$age)
# lwt
mean(B_Samples$lwt)
sd(B_Samples$lwt)
median(B_Samples$lwt)
# bwt
mean(B_Samples$bwt)
sd(B_Samples$bwt)
median(B_Samples$bwt)
# 1-C How many individuals older than 30 smoke?
B_Samples %>% filter(smoke == 1, age > 30) %>% tally()
# 1-D Plot a histogram for birth weight.
hist(B_Samples$bwt,
main = "Birth Weight",
xlab = "Weight in Grams",
)
# 1-G Calculate the probability of randomly selecting an individual that has either a
# low birth weight or a mother who was a smoker.
total_individuals <- nrow(B_Samples)
# Number of individuals with low birth weight
low_prob <- sum(B_Samples$low == 1)/total_individuals
# Number of individuals with a mother who smoked
smoke_prob <- sum(B_Samples$smoke == 1)/total_individuals
# Number of individuals with low birth weight and mother who smoked
low_smoke_prob <- sum(B_Samples$low == 1 | B_Samples$smoke == 1)/total_individuals
# Calculate the probability P(A ⋃ B) = P(A) + P(B) - P(A and B)
low_prob + smoke_prob - low_smoke_prob
# 1-H Calculate the probability of randomly selecting an individual that is white and
# has more than 3 physician visits during the first trimester.
white_prob <- sum(B_Samples%race == 1)/total_individuals
# Probability of individual being white P(A)
white_prob <- sum(B_Samples%race == 1)/total_individuals
# Probability of individual being white P(A)
white_prob <- sum(B_Samples$race == 1)/total_individuals
# Probability of having more than 3 physician visits P(B)
phys_prob <- sum(B_Samples$ftv > 3)/total_individuals
# Probability of having more than 3 physician visits P(B)
phys_prob <- sum(as.numeric(B_Samples$ftv) > 3) / total_individuals
# Probability of having more than 3 physician visits P(B)
phys_prob <- sum(as.numeric(B_Samples$ftv) > 3)
# Probability of having more than 3 physician visits P(B)
sum(as.numeric(B_Samples$ftv) > 3)
# Probability of having more than 3 physician visits P(B)
phys_prob <- sum(as.numeric(B_Samples$ftv) > 3) / total_individuals
# Probability of being white and 3 visits P(A and B) = P(A)*P(B)
white_prob * phys_prob
cat("probability: ", phys_prob, "\n")
cat("Probability: ",white_phys_prob, "\n")
# Probability of being white and 3 visits P(A and B) = P(A)*P(B)
white_phys_prob <- white_prob * phys_prob
cat("Probability: ",white_phys_prob, "\n")
# Calculate the probability P(A ⋃ B) = P(A)+P(B)-P(A and B)
low_smoke_prob <- low_prob + smoke_prob - low_smoke_prob
cat("Probability: ",low_smoke_prob, "\n")
cat("Probability of having either a low birth wieght or a mother who was a smoker: ",low_smoke_prob, "\n")
cat("Probability of being white and has more than 3 physician visits: ",white_phys_prob, "\n")
# 1-C How many individuals older than 30 smoke?
older_smoke <- B_Samples %>% filter(smoke == 1, age > 30) %>% tally()
cat("Number of individuals older than 30 that smoke: ", older_smoke)
cat("Number of individuals older than 30 that smoke: ", older_smoke "\n")
# 1-C How many individuals older than 30 smoke?
older_smoke <- B_Samples %>% filter(smoke == 1, age > 30) %>% tally()
cat("Number of individuals older than 30 that smoke: ", older_smoke, "\n")
# 1-C How many individuals older than 30 smoke?
older_smoke <- B_Samples %>% filter(smoke == 1, age > 30) %>% tally()
# 1-C How many individuals older than 30 smoke?
B_Samples %>% filter(smoke == 1, age > 30) %>% tally()
older_smoke <- sum(B_Samples$smoke == 1 & B_Samples$age > 30)
cat("Number of individuals older than 30 that smoke: ", older_smoke, "\n")
# 1-A How many observations are in the dataset?
nrow(B_Samples)
num_observations <- nrow(B_Samples)
cat("Number of observations in the dataset: ", num_observations, "\n")
# Problem Set 2
setwd("C:/Users/logan/Documents/GitHub/Prob-and-Stats-for-Biomed/Homework/HW02/")
# Load dataset
B_Samples = read.table("birthwt.txt", sep = "", header = T)
head(B_Samples)
# 1-A How many observations are in the dataset?
num_observations <- nrow(B_Samples)
cat("Number of observations in the dataset: ", num_observations, "\n")
# 1-B Examine the features, determine what type of variable each represents,
# and indicate whether each one is discrete or continuous. Then, go on to determine
# the distribution or descriptive statistics as appropriate
# For Discrete Variables:
# Indicate whether the feature is nominal, ordinal, or binary
# How many levels each variable has
# Discrete Variables:
# low - binary
B_Samples$low <- as.factor(B_Samples$low)
nlevels(B_Samples$low)
# race - nominal
B_Samples$race <- as.factor(B_Samples$race)
nlevels(B_Samples$race)
# smoke - binary
B_Samples$smoke <- as.factor(B_Samples$smoke)
nlevels(B_Samples$smoke)
# ptl - ordinal
B_Samples$ptl <- as.factor(B_Samples$ptl)
nlevels(B_Samples$ptl)
# ht - binary
B_Samples$ht <- as.factor(B_Samples$ht)
nlevels(B_Samples$ht)
# ui - binary
B_Samples$ui <- as.factor(B_Samples$ui)
nlevels(B_Samples$ui)
# ftv - ordinal
B_Samples$ftv <- as.factor(B_Samples$ftv)
nlevels(B_Samples$ftv)
# For Continuous variables:
# Determine the mean, standard deviation, and median
# Continuous Variable:
# age
mean(B_Samples$age)
sd(B_Samples$age)
median(B_Samples$age)
# lwt
mean(B_Samples$lwt)
sd(B_Samples$lwt)
median(B_Samples$lwt)
# bwt
mean(B_Samples$bwt)
sd(B_Samples$bwt)
median(B_Samples$bwt)
# 1-C How many individuals older than 30 smoke?
older_smoke <- sum(B_Samples$smoke == 1 & B_Samples$age > 30)
cat("Number of individuals older than 30 that smoke: ", older_smoke, "\n")
# 1-D Plot a histogram for birth weight.
hist(B_Samples$bwt,
main = "Birth Weight",
xlab = "Weight in Grams",
)
# 1-G Calculate the probability of randomly selecting an individual that has either a
# low birth weight or a mother who was a smoker.
total_individuals <- nrow(B_Samples)
# Probability of individuals with low birth weight P(A)
low_prob <- sum(B_Samples$low == 1)/total_individuals
# Probability of individuals with a mother who smoked P(B)
smoke_prob <- sum(B_Samples$smoke == 1)/total_individuals
# Probability of individuals with low birth weight and mother who smoked P(A and B)
low_smoke_prob <- sum(B_Samples$low == 1 | B_Samples$smoke == 1)/total_individuals
# Calculate the probability P(A ⋃ B) = P(A)+P(B)-P(A and B)
low_smoke_prob <- low_prob + smoke_prob - low_smoke_prob
cat("Probability of having either a low birth wieght or a mother who was a smoker: ",low_smoke_prob, "\n")
# 1-H Calculate the probability of randomly selecting an individual that is white and
# has more than 3 physician visits during the first trimester.
# Probability of individual being white P(A)
white_prob <- sum(B_Samples$race == 1)/total_individuals
# Probability of having more than 3 physician visits P(B)
phys_prob <- sum(as.numeric(B_Samples$ftv) > 3) / total_individuals
# Probability of being white and 3 visits P(A and B) = P(A)*P(B)
white_phys_prob <- white_prob * phys_prob
cat("Probability of being white and has more than 3 physician visits: ",white_phys_prob, "\n")
cat("Discrete Variables:")
print("Discrete Variables:")
cat("Discrete Variables:")
cat("low variable type: binary")
cat("low variable levels: ", low_level, "\n")
low_levels <- nlevels(B_Samples$low)
at("Discrete Variables:")
at("Discrete Variables:")
cat("Discrete Variables:")
cat("low variable type: binary")
cat("low variable levels: ", low_level, "\n")
low_level <- nlevels(B_Samples$low)
cat("Discrete Variables:")
cat("low variable type: binary")
cat("low variable levels: ", low_level, "\n")
B_Samples$low <- as.factor(B_Samples$low)
low_level <- nlevels(B_Samples$low)
cat("low variable type: binary, variable level: "low_level, "\n")
cat("low variable type: binary, variable level: ",low_level, "\n")
# For Discrete Variables:
# Indicate whether the feature is nominal, ordinal, or binary
# How many levels each variable has
binary_type <- "binary"
# For Discrete Variables:
# Indicate whether the feature is nominal, ordinal, or binary
# How many levels each variable has
binary_type <- binary
cat("low variable type: ",lbinary_type, "variable level: ",low_level, "\n")
cat("low variable type: ",binary_type, "variable level: ",low_level, "\n")
cat("low variable type:",binary_type, "variable level:",low_level, "\n")
cat("low variable type:",binary_type, ", variable level:",low_level, "\n")
race_level <- nlevels(B_Samples$race)
cat("race variable type:",nominal_type, ", variable level:",race_level, "\n")
nominal_type <- "nominal"
ordinal_type <- "ordianl"
binary_type <- "binary"
race_level <- nlevels(B_Samples$race)
cat("race variable type:",nominal_type, ", variable level:",race_level, "\n")
B_Samples$low <- as.factor(B_Samples$low)
nlevels(B_Samples$low)
# race - nominal
B_Samples$race <- as.factor(B_Samples$race)
nlevels(B_Samples$race)
# smoke - binary
B_Samples$smoke <- as.factor(B_Samples$smoke)
nlevels(B_Samples$smoke)
# ptl - ordinal
B_Samples$ptl <- as.factor(B_Samples$ptl)
nlevels(B_Samples$ptl)
# ht - binary
B_Samples$ht <- as.factor(B_Samples$ht)
nlevels(B_Samples$ht)
# ui - binary
B_Samples$ui <- as.factor(B_Samples$ui)
nlevels(B_Samples$ui)
# ftv - ordinal
B_Samples$ftv <- as.factor(B_Samples$ftv)
nlevels(B_Samples$ftv)
# 1-C How many individuals older than 30 smoke?
sum(B_Samples$smoke == 1 & B_Samples$age > 30)
# Calculate the probability P(A ⋃ B) = P(A)+P(B)-P(A and B)
low_prob + smoke_prob - low_smoke_prob
# Probability of being white and 3 visits P(A and B) = P(A)*P(B)
white_prob * phys_prob
# Problem Set 2
setwd("C:/Users/logan/Documents/GitHub/Prob-and-Stats-for-Biomed/Homework/HW02/")
# Load dataset
B_Samples = read.table("birthwt.txt", sep = "", header = T)
head(B_Samples)
# 1-A How many observations are in the dataset?
num_observations <- nrow(B_Samples)
cat("Number of observations in the dataset: ", num_observations, "\n")
# 1-B Examine the features, determine what type of variable each represents,
# and indicate whether each one is discrete or continuous. Then, go on to determine
# the distribution or descriptive statistics as appropriate
# For Discrete Variables:
# Indicate whether the feature is nominal, ordinal, or binary
# How many levels each variable has
# Discrete Variables:
# low - binary
B_Samples$low <- as.factor(B_Samples$low)
nlevels(B_Samples$low)
# race - nominal
B_Samples$race <- as.factor(B_Samples$race)
nlevels(B_Samples$race)
# smoke - binary
B_Samples$smoke <- as.factor(B_Samples$smoke)
nlevels(B_Samples$smoke)
# ptl - ordinal
B_Samples$ptl <- as.factor(B_Samples$ptl)
nlevels(B_Samples$ptl)
# ht - binary
B_Samples$ht <- as.factor(B_Samples$ht)
nlevels(B_Samples$ht)
# ui - binary
B_Samples$ui <- as.factor(B_Samples$ui)
nlevels(B_Samples$ui)
# ftv - ordinal
B_Samples$ftv <- as.factor(B_Samples$ftv)
nlevels(B_Samples$ftv)
# For Continuous variables:
# Determine the mean, standard deviation, and median
# Continuous Variable:
# age
mean(B_Samples$age)
sd(B_Samples$age)
median(B_Samples$age)
# lwt
mean(B_Samples$lwt)
sd(B_Samples$lwt)
median(B_Samples$lwt)
# bwt
mean(B_Samples$bwt)
sd(B_Samples$bwt)
median(B_Samples$bwt)
# 1-C How many individuals older than 30 smoke?
sum(B_Samples$smoke == 1 & B_Samples$age > 30)
# 1-D Plot a histogram for birth weight.
hist(B_Samples$bwt,
main = "Birth Weight",
xlab = "Weight in Grams",
)
# 1-G Calculate the probability of randomly selecting an individual that has either a
# low birth weight or a mother who was a smoker.
total_individuals <- nrow(B_Samples)
# Probability of individuals with low birth weight P(A)
low_prob <- sum(B_Samples$low == 1)/total_individuals
# Probability of individuals with a mother who smoked P(B)
smoke_prob <- sum(B_Samples$smoke == 1)/total_individuals
# Probability of individuals with low birth weight and mother who smoked P(A and B)
low_smoke_prob <- sum(B_Samples$low == 1 | B_Samples$smoke == 1)/total_individuals
# Calculate the probability P(A ⋃ B) = P(A)+P(B)-P(A and B)
low_prob + smoke_prob - low_smoke_prob
# 1-H Calculate the probability of randomly selecting an individual that is white and
# has more than 3 physician visits during the first trimester.
# Probability of individual being white P(A)
white_prob <- sum(B_Samples$race == 1)/total_individuals
# Probability of having more than 3 physician visits P(B)
phys_prob <- sum(as.numeric(B_Samples$ftv) > 3) / total_individuals
# Probability of being white and 3 visits P(A and B) = P(A)*P(B)
white_prob * phys_prob
PNo_Cancer <- 1-pCancer
pCancer <- 0.01
pPositive_Cancer <- 0.9
pPositive_No_Cancer <- 0.08
PNo_Cancer <- 1-pCancer
pPositive <- pPositive_Cancer * pCancer + pPositive_No_Cancer * PNo_Cancer
pCancer_Positive <- pPositive_Cancer * pCancer / pPositive
cat(pCancer_Positive)
pCancer <- 0.01
pPositive_Cancer <- 0.9
pPositive_No_Cancer <- 0.08
PNo_Cancer <- 1-pCancer
pPositive <- pPositive_Cancer * pCancer + pPositive_No_Cancer * PNo_Cancer
pCancer_Positive <- pPositive_Cancer * pCancer / pPositive
cat(pCancer_Positive)
# P(Cancer) = 0.01
# P(Positive|Cancer) = 0.9
# P(Positive|No Cancer) = 0.08
# P(No Cancer) = 1 - P(Cancer)
pCancer <- 0.01
pPositive_Cancer <- 0.9
pPositive_No_Cancer <- 0.08
PNo_Cancer <- 1-pCancer
# P(Positive) = P(Positive|Cancer)*P(Cancer)+P(Positive|No Cancer)*P(No Cancer)
pPositive <- pPositive_Cancer * pCancer + pPositive_No_Cancer * PNo_Cancer
# P(Cancer|Positive) = P(Positive|Cancer)*P(Cancer)/P(Positive)
pCancer_Positive <- pPositive_Cancer * pCancer / pPositive
cat(pCancer_Positive)
n <- 20
# number of successes
k <- 12
# Probability of success
p <- 0.7
probability <- dbinom(k, size = n, prob = p)
cat(probability)
# Calculate probability
dbinom(k, size = n, prob = p)
# P(Cancer|Positive) = P(Positive|Cancer)*P(Cancer)/P(Positive)
pPositive_Cancer * pCancer / pPositive
